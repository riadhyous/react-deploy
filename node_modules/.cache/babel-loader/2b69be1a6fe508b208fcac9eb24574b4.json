{"ast":null,"code":"import _slicedToArray from \"/home/nino420/Desktop/TodoReactApp/Firebase-auth-chat-app-master/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nino420/Desktop/TodoReactApp/Firebase-auth-chat-app-master/src/pages/image/SetProfileImage/SetProfileImage.tsx\";\nimport React, { useRef, useState } from 'react';\nimport AvatarEditor from 'react-avatar-editor';\nimport noAvatarImage from '../../../assets/no-avatar.jpg';\nimport firebaseImage from '../../../assets/firebase.png';\nimport './setProfileImage.scss';\nimport { useDispatch, useMappedState } from 'redux-react-hook';\nimport { action_setAvatar } from '../../../store/profile/setAvatar';\nimport { isAvatarImageUploading } from '../../../store/profile/selectors';\n\nvar NoAvatar = function NoAvatar() {\n  return React.createElement(\"div\", {\n    className: \"image-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: {\n      width: '200px'\n    },\n    alt: \"profile\",\n    src: noAvatarImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n};\n\nexport var SetProfileImage = function SetProfileImage() {\n  var dispatch = useDispatch();\n  var isLoading = useMappedState(isAvatarImageUploading);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      imageRef = _useState2[0],\n      setImageRef = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      avatar = _useState4[0],\n      setAvatar = _useState4[1];\n\n  var uploadImageInputRef = useRef(null);\n\n  var setEditorRef = function setEditorRef(editor) {\n    return setImageRef(editor);\n  };\n\n  if (isLoading) {\n    return React.createElement(\"div\", {\n      className: \"set-profile-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: firebaseImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Processing...\"));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"set-profile-image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: firebaseImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Upload your photo\"), avatar ? React.createElement(AvatarEditor, {\n    style: {\n      margin: '20px',\n      marginTop: '0px',\n      width: '250px',\n      height: '378px'\n    },\n    ref: setEditorRef,\n    image: URL.createObjectURL(avatar),\n    border: 0,\n    width: 852,\n    height: 1280,\n    borderRadius: 0,\n    color: [255, 255, 255, 0.6],\n    scale: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }) : React.createElement(NoAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: function onClick() {\n      var _uploadImageInputRef$;\n\n      return (_uploadImageInputRef$ = uploadImageInputRef.current) === null || _uploadImageInputRef$ === void 0 ? void 0 : _uploadImageInputRef$.click();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Select photo\"), React.createElement(\"input\", {\n    ref: uploadImageInputRef,\n    type: \"file\",\n    accept: \".jpg, .jpeg\",\n    onChange: function onChange(e) {\n      var files = e.target.files;\n\n      if (files) {\n        var file = files[0];\n\n        if (file) {\n          setAvatar(file);\n        }\n      }\n    },\n    style: {\n      display: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: false,\n    onClick: function onClick() {\n      if (imageRef && avatar) {\n        var canvasScaledImage = imageRef.getImageScaledToCanvas();\n        canvasScaledImage.toBlob(function (imageBlob) {\n          dispatch(action_setAvatar(imageBlob));\n        }, 'image/jpeg', 0.9);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Save\")));\n};","map":{"version":3,"sources":["/home/nino420/Desktop/TodoReactApp/Firebase-auth-chat-app-master/src/pages/image/SetProfileImage/SetProfileImage.tsx"],"names":["React","useRef","useState","AvatarEditor","noAvatarImage","firebaseImage","useDispatch","useMappedState","action_setAvatar","isAvatarImageUploading","NoAvatar","width","SetProfileImage","dispatch","isLoading","imageRef","setImageRef","avatar","setAvatar","uploadImageInputRef","setEditorRef","editor","margin","marginTop","height","URL","createObjectURL","current","click","e","files","target","file","display","canvasScaledImage","getImageScaledToCanvas","toBlob","imageBlob"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport AvatarEditor from 'react-avatar-editor';\n\nimport noAvatarImage from '../../../assets/no-avatar.jpg';\nimport firebaseImage from '../../../assets/firebase.png';\n\nimport './setProfileImage.scss';\nimport { useDispatch, useMappedState } from 'redux-react-hook';\nimport { action_setAvatar } from '../../../store/profile/setAvatar';\nimport { isAvatarImageUploading } from '../../../store/profile/selectors';\n\nconst NoAvatar = () => {\n    return (\n        <div className=\"image-container\">\n            <img style={{ width: '200px' }} alt=\"profile\" src={noAvatarImage} />\n        </div>\n    );\n};\n\nexport const SetProfileImage = () => {\n    const dispatch = useDispatch();\n\n    const isLoading = useMappedState(isAvatarImageUploading);\n\n    const [imageRef, setImageRef] = useState<AvatarEditor | null>(null);\n    const [avatar, setAvatar] = useState<File>();\n    const uploadImageInputRef = useRef<HTMLInputElement>(null);\n\n    const setEditorRef = (editor: AvatarEditor | null) => setImageRef(editor);\n\n    if (isLoading) {\n        return (\n            <div className=\"set-profile-image\">\n                <img src={firebaseImage} />\n                <span>Processing...</span>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"set-profile-image\">\n            <img src={firebaseImage} />\n            <span>Upload your photo</span>\n            {avatar ? (\n                <AvatarEditor\n                    style={{\n                        margin: '20px',\n                        marginTop: '0px',\n                        width: '250px',\n                        height: '378px',\n                    }}\n                    ref={setEditorRef}\n                    image={URL.createObjectURL(avatar)}\n                    border={0}\n                    width={852}\n                    height={1280}\n                    borderRadius={0}\n                    color={[255, 255, 255, 0.6]}\n                    scale={1}\n                />\n            ) : (\n                <NoAvatar />\n            )}\n            <button onClick={() => uploadImageInputRef.current?.click()}>Select photo</button>\n            <input\n                ref={uploadImageInputRef}\n                type=\"file\"\n                accept=\".jpg, .jpeg\"\n                onChange={(e) => {\n                    const { files } = e.target;\n                    if (files) {\n                        const file = files[0];\n                        if (file) {\n                            setAvatar(file);\n                        }\n                    }\n                }}\n                style={{ display: 'none' }}\n            />\n            <button\n                type=\"submit\"\n                disabled={false}\n                onClick={() => {\n                    if (imageRef && avatar) {\n                        const canvasScaledImage: HTMLCanvasElement = imageRef.getImageScaledToCanvas();\n                        canvasScaledImage.toBlob(\n                            (imageBlob: Blob | null) => {\n                                dispatch(action_setAvatar(imageBlob));\n                            },\n                            'image/jpeg',\n                            0.9,\n                        );\n                    }\n                }}\n            >\n                <span>Save</span>\n            </button>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}