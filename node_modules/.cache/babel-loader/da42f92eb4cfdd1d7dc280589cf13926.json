{"ast":null,"code":"import _slicedToArray from \"/home/nino420/Desktop/TodoReactApp/Firebase-auth-chat-app-master/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nino420/Desktop/TodoReactApp/Firebase-auth-chat-app-master/src/pages/auth/SignInWithMultipleAccounts/SignInWithMultipleAccounts.tsx\";\nimport React, { useState } from 'react';\nimport firebaseImage from '../../../assets/firebase.png';\nimport { useDispatch } from 'redux-react-hook';\nimport '../../../assets/styles/_constants.scss';\nimport './signInWithMultipleAccounts.scss';\nimport { firebase_app } from '../../../api/firebase';\nimport googleImage from '../../../assets/logos/google-logo.png';\nimport facebookImage from '../../../assets/logos/facebook-logo.png';\nimport twitterImage from '../../../assets/logos/twitter-icon.png';\nimport githubImage from '../../../assets/logos/github-icon.png';\nimport emailImage from '../../../assets/logos/email-icon.png';\nimport { action_signInWithPopup } from '../../../store/auth/signInWithPopUp';\nimport firebase from 'firebase';\nvar googleProvider = new firebase.auth.GoogleAuthProvider();\nvar facebookProvider = new firebase.auth.FacebookAuthProvider();\nvar twitterProvider = new firebase.auth.TwitterAuthProvider();\nvar githubProvider = new firebase.auth.GithubAuthProvider();\nvar phoneProvider = new firebase.auth.PhoneAuthProvider();\nexport var SignInWithMultipleAccounts = function SignInWithMultipleAccounts() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isUserLoggedIn = _useState2[0],\n      setIsUserLoggedIn = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  firebase_app.auth().onAuthStateChanged(function (user) {\n    if (user) {\n      // User is signed in.\n      setIsUserLoggedIn(true);\n    } else {\n      setIsUserLoggedIn(false);\n    }\n  });\n  var dispatch = useDispatch();\n  return React.createElement(\"div\", {\n    className: \"main-div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"logo-img\",\n    src: firebaseImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Sign in with multiple accounts\"), React.createElement(\"div\", {\n    className: \"images-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: googleImage,\n    className: \"image-icon-button\",\n    onClick: function onClick() {\n      dispatch(action_signInWithPopup({\n        provider: googleProvider\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: facebookImage,\n    className: \"image-icon-button\",\n    onClick: function onClick() {\n      facebookProvider.addScope('email');\n      dispatch(action_signInWithPopup({\n        provider: facebookProvider\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: twitterImage,\n    className: \"image-icon-button\",\n    onClick: function onClick() {\n      dispatch(action_signInWithPopup({\n        email: email,\n        password: password\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: githubImage,\n    className: \"image-icon-button\",\n    onClick: function onClick() {\n      dispatch(action_signInWithPopup({\n        email: email,\n        password: password,\n        hello: 'some'\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: emailImage,\n    className: \"image-icon-button\",\n    onClick: function onClick() {\n      dispatch(action_signInWithPopup({\n        email: email,\n        password: password\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/home/nino420/Desktop/TodoReactApp/Firebase-auth-chat-app-master/src/pages/auth/SignInWithMultipleAccounts/SignInWithMultipleAccounts.tsx"],"names":["React","useState","firebaseImage","useDispatch","firebase_app","googleImage","facebookImage","twitterImage","githubImage","emailImage","action_signInWithPopup","firebase","googleProvider","auth","GoogleAuthProvider","facebookProvider","FacebookAuthProvider","twitterProvider","TwitterAuthProvider","githubProvider","GithubAuthProvider","phoneProvider","PhoneAuthProvider","SignInWithMultipleAccounts","isUserLoggedIn","setIsUserLoggedIn","email","setEmail","password","setPassword","onAuthStateChanged","user","dispatch","provider","addScope","hello"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport firebaseImage from '../../../assets/firebase.png';\nimport { useDispatch } from 'redux-react-hook';\n\nimport { signIn } from '../../../store/auth/signIn';\nimport '../../../assets/styles/_constants.scss';\n\nimport './signInWithMultipleAccounts.scss';\nimport { firebase_app } from '../../../api/firebase';\n\nimport phoneImage from '../../../assets/logos/phone-icon.png';\nimport googleImage from '../../../assets/logos/google-logo.png';\nimport facebookImage from '../../../assets/logos/facebook-logo.png';\nimport twitterImage from '../../../assets/logos/twitter-icon.png';\nimport githubImage from '../../../assets/logos/github-icon.png';\nimport emailImage from '../../../assets/logos/email-icon.png';\nimport { action_signInWithPopup } from '../../../store/auth/signInWithPopUp';\nimport firebase from 'firebase';\n\nlet googleProvider = new firebase.auth.GoogleAuthProvider();\nconst facebookProvider = new firebase.auth.FacebookAuthProvider();\nlet twitterProvider = new firebase.auth.TwitterAuthProvider();\nlet githubProvider = new firebase.auth.GithubAuthProvider();\nlet phoneProvider = new firebase.auth.PhoneAuthProvider();\n\nexport const SignInWithMultipleAccounts: React.FC = () => {\n    const [isUserLoggedIn, setIsUserLoggedIn] = useState<boolean>(false);\n\n    const [email, setEmail] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n\n    firebase_app.auth().onAuthStateChanged((user) => {\n        if (user) {\n            // User is signed in.\n            setIsUserLoggedIn(true);\n        } else {\n            setIsUserLoggedIn(false);\n        }\n    });\n\n    const dispatch = useDispatch();\n\n    return (\n        <div className=\"main-div\">\n            <img className=\"logo-img\" src={firebaseImage} />\n\n            <span>Sign in with multiple accounts</span>\n\n            <div className=\"images-container\">\n                {/*<img*/}\n                {/*    src={phoneImage}*/}\n                {/*    className=\"image-icon-button\"*/}\n                {/*    onClick={() => {*/}\n                {/*        dispatch(action_signInWithPopup({ provider: phoneProvider }));*/}\n                {/*    }}*/}\n                {/*/>*/}\n                <img\n                    src={googleImage}\n                    className=\"image-icon-button\"\n                    onClick={() => {\n                        dispatch(action_signInWithPopup({ provider: googleProvider }));\n                    }}\n                />\n                <img\n                    src={facebookImage}\n                    className=\"image-icon-button\"\n                    onClick={() => {\n                        facebookProvider.addScope('email');\n                        dispatch(action_signInWithPopup({ provider: facebookProvider }));\n                    }}\n                />\n                <img\n                    src={twitterImage}\n                    className=\"image-icon-button\"\n                    onClick={() => {\n                        dispatch(action_signInWithPopup({ email, password }));\n                    }}\n                />\n                <img\n                    src={githubImage}\n                    className=\"image-icon-button\"\n                    onClick={() => {\n                        dispatch(action_signInWithPopup({ email, password, hello: 'some' }));\n                    }}\n                />\n                <img\n                    src={emailImage}\n                    className=\"image-icon-button\"\n                    onClick={() => {\n                        dispatch(action_signInWithPopup({ email, password }));\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}