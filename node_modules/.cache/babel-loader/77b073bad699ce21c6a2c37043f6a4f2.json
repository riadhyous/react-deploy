{"ast":null,"code":"import _regeneratorRuntime from \"/home/nino420/Desktop/TodoReactApp/Firebase-auth-chat-app-master/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(worker_getProfileData);\n\nimport { put } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport { getProfileDataSuccess, getProfileDataError } from './actions';\nimport { firebase_app } from '../../../api/firebase';\nexport function worker_getProfileData() {\n  var infoToastID, _firebase_app$auth$cu, userId, document, data;\n\n  return _regeneratorRuntime.wrap(function worker_getProfileData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          infoToastID = toast.info('Loading');\n          userId = (_firebase_app$auth$cu = firebase_app.auth().currentUser) === null || _firebase_app$auth$cu === void 0 ? void 0 : _firebase_app$auth$cu.uid;\n\n          if (!userId) {\n            _context.next = 14;\n            break;\n          }\n\n          _context.next = 6;\n          return firebase_app.firestore().collection('profiles').doc(userId).get();\n\n        case 6:\n          document = _context.sent;\n          toast.dismiss(infoToastID);\n          toast.success('Profile data loaded'); // @ts-ignore\n\n          data = document === null || document === void 0 ? void 0 : document.data();\n          _context.next = 12;\n          return put(getProfileDataSuccess(data));\n\n        case 12:\n          _context.next = 15;\n          break;\n\n        case 14:\n          toast.info('Not logged in');\n\n        case 15:\n          _context.next = 23;\n          break;\n\n        case 17:\n          _context.prev = 17;\n          _context.t0 = _context[\"catch\"](0);\n          toast.dismiss(infoToastID);\n          toast.error(_context.t0.message);\n          _context.next = 23;\n          return put(getProfileDataError(_context.t0));\n\n        case 23:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 17]]);\n}","map":{"version":3,"sources":["/home/nino420/Desktop/TodoReactApp/Firebase-auth-chat-app-master/src/store/profile/getProfileData/sagas.ts"],"names":["worker_getProfileData","put","toast","getProfileDataSuccess","getProfileDataError","firebase_app","infoToastID","info","userId","auth","currentUser","uid","firestore","collection","doc","get","document","dismiss","success","data","error","message"],"mappings":";;;;yBAKiBA,qB;;AALjB,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,qBAAT,EAAgCC,mBAAhC,QAA2D,WAA3D;AACA,SAASC,YAAT,QAA6B,uBAA7B;AAEA,OAAO,SAAUL,qBAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGCM,UAAAA,WAAW,GAAGJ,KAAK,CAACK,IAAN,CAAW,SAAX,CAAd;AAEMC,UAAAA,MALP,4BAKgBH,YAAY,CAACI,IAAb,GAAoBC,WALpC,0DAKgB,sBAAiCC,GALjD;;AAAA,eAMKH,MANL;AAAA;AAAA;AAAA;;AAAA;AAOsB,iBAAMH,YAAY,CAC9BO,SADkB,GAElBC,UAFkB,CAEP,UAFO,EAGlBC,GAHkB,CAGdN,MAHc,EAIlBO,GAJkB,EAAN;;AAPtB;AAOWC,UAAAA,QAPX;AAaKd,UAAAA,KAAK,CAACe,OAAN,CAAcX,WAAd;AACAJ,UAAAA,KAAK,CAACgB,OAAN,CAAc,qBAAd,EAdL,CAgBK;;AACMC,UAAAA,IAjBX,GAiBkBH,QAjBlB,aAiBkBA,QAjBlB,uBAiBkBA,QAAQ,CAAEG,IAAV,EAjBlB;AAAA;AAmBK,iBAAMlB,GAAG,CAACE,qBAAqB,CAACgB,IAAD,CAAtB,CAAT;;AAnBL;AAAA;AAAA;;AAAA;AAqBKjB,UAAAA,KAAK,CAACK,IAAN,CAAW,eAAX;;AArBL;AAAA;AAAA;;AAAA;AAAA;AAAA;AAwBCL,UAAAA,KAAK,CAACe,OAAN,CAAcX,WAAd;AACAJ,UAAAA,KAAK,CAACkB,KAAN,CAAY,YAAMC,OAAlB;AAzBD;AA2BC,iBAAMpB,GAAG,CAACG,mBAAmB,aAApB,CAAT;;AA3BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { put } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport { getProfileDataSuccess, getProfileDataError } from './actions';\nimport { firebase_app } from '../../../api/firebase';\n\nexport function* worker_getProfileData(): IterableIterator<any> {\n    let infoToastID;\n    try {\n        infoToastID = toast.info('Loading');\n\n        const userId = firebase_app.auth().currentUser?.uid;\n        if (userId) {\n            const document = yield firebase_app\n                .firestore()\n                .collection('profiles')\n                .doc(userId)\n                .get();\n\n            toast.dismiss(infoToastID);\n            toast.success('Profile data loaded');\n\n            // @ts-ignore\n            const data = document?.data();\n\n            yield put(getProfileDataSuccess(data));\n        } else {\n            toast.info('Not logged in');\n        }\n    } catch (error) {\n        toast.dismiss(infoToastID);\n        toast.error(error.message);\n\n        yield put(getProfileDataError(error));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}