{"ast":null,"code":"import _regeneratorRuntime from \"/home/nino420/Desktop/TodoReactApp/Firebase-auth-chat-app-master/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(worker_signUp);\n\nimport { put } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport { firebase_app } from '../../../api/firebase';\nimport { signUpError, signUpSuccess } from './actions';\nexport function worker_signUp(action) {\n  var infoToastID, _action$payload, email, password, confirmationResult;\n\n  return _regeneratorRuntime.wrap(function worker_signUp$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          infoToastID = toast.info('Loading');\n          _action$payload = action.payload, email = _action$payload.email, password = _action$payload.password;\n          _context.next = 5;\n          return firebase_app.auth().createUserWithEmailAndPassword(email, password);\n\n        case 5:\n          confirmationResult = _context.sent;\n          toast.dismiss(infoToastID);\n          toast.success('User created');\n          _context.next = 10;\n          return put(signUpSuccess(confirmationResult));\n\n        case 10:\n          _context.next = 18;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          toast.dismiss(infoToastID);\n          toast.error(_context.t0.message);\n          _context.next = 18;\n          return put(signUpError(_context.t0));\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 12]]);\n}","map":{"version":3,"sources":["/home/nino420/Desktop/TodoReactApp/Firebase-auth-chat-app-master/src/store/auth/signUp/sagas.ts"],"names":["worker_signUp","put","toast","firebase_app","signUpError","signUpSuccess","action","infoToastID","info","payload","email","password","auth","createUserWithEmailAndPassword","confirmationResult","dismiss","success","error","message"],"mappings":";;;;yBAKiBA,a;;AALjB,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,WAA3C;AAEA,OAAO,SAAUL,aAAV,CACHM,MADG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAKCC,UAAAA,WAAW,GAAGL,KAAK,CAACM,IAAN,CAAW,SAAX,CAAd;AALD,4BAO6BF,MAAM,CAACG,OAPpC,EAOSC,KAPT,mBAOSA,KAPT,EAOgBC,QAPhB,mBAOgBA,QAPhB;AAAA;AAS4B,iBAAMR,YAAY,CACxCS,IAD4B,GAE5BC,8BAF4B,CAEGH,KAFH,EAEUC,QAFV,CAAN;;AAT5B;AASOG,UAAAA,kBATP;AAaCZ,UAAAA,KAAK,CAACa,OAAN,CAAcR,WAAd;AACAL,UAAAA,KAAK,CAACc,OAAN,CAAc,cAAd;AAdD;AAgBC,iBAAMf,GAAG,CAACI,aAAa,CAACS,kBAAD,CAAd,CAAT;;AAhBD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkBCZ,UAAAA,KAAK,CAACa,OAAN,CAAcR,WAAd;AACAL,UAAAA,KAAK,CAACe,KAAN,CAAY,YAAMC,OAAlB;AAnBD;AAqBC,iBAAMjB,GAAG,CAACG,WAAW,aAAZ,CAAT;;AArBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { put } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport { firebase_app } from '../../../api/firebase';\nimport { signUpError, signUpSuccess } from './actions';\n\nexport function* worker_signUp(\n    action: Record<'payload', { email: string; password: string }>,\n): IterableIterator<any> {\n    let infoToastID;\n    try {\n        infoToastID = toast.info('Loading');\n\n        const { email, password } = action.payload;\n\n        const confirmationResult = yield firebase_app\n            .auth()\n            .createUserWithEmailAndPassword(email, password);\n\n        toast.dismiss(infoToastID);\n        toast.success('User created');\n\n        yield put(signUpSuccess(confirmationResult));\n    } catch (error) {\n        toast.dismiss(infoToastID);\n        toast.error(error.message);\n\n        yield put(signUpError(error));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}